# Generated by Django 5.0.7 on 2024-07-22 20:53

from django.db import migrations

# Dicionários de dados
CATEGORIAS = {
    "trava_lingua": "Trava-Língua",
    "palavras_dificeis": "Palavras Difíceis",
    "fonemas_especificos": "Fonemas Específicos",
    "vogais_ditongos": "Vogais e Ditongos",
    "saudacoes": "Saudações",
    "expressoes_comuns": "Expressões Comuns",
    "comidas": "Comidas",
    "cores": "Cores",
    "animais": "Animais",
    "profissoes": "Profissões"
}

FRASES = {
    "trava_lingua": [
        "O rato roeu a roupa do rei de Roma",
        "A aranha arranha a rã",
        "O doce perguntou ao doce qual é o doce mais doce",
        "Três pratos de trigo para três tigres tristes",
        "O tempo perguntou ao tempo quanto tempo o tempo tem"
    ],
    "palavras_dificeis": [
        "Paralelepípedo",
        "Otorrinolaringologista",
        "Pneumoultramicroscopicossilicovulcanoconiose",
        "Inconstitucionalissimamente",
        "Anticonstitucionalissimamente"
    ],
    "fonemas_especificos": [
        "O cachorro corre no campo",
        "A xícara está cheia de chá",
        "O gato mia no telhado",
        "A zebra corre na savana",
        "O jacaré nada no rio"
    ],
    "vogais_ditongos": [
        "O céu está azul",
        "A águia voa alto",
        "O boi pasta no campo",
        "A noite cai suave",
        "O rei governa o país"
    ],
    "saudacoes": [
        "Bom dia, tudo bem?",
        "Boa tarde, como vai?",
        "Boa noite, prazer em conhecer",
        "Olá, tudo bem com você?",
        "Oi, como você está?"
    ],
    "expressoes_comuns": [
        "Por favor, me ajude",
        "Muito obrigado pela ajuda",
        "Desculpe pelo transtorno",
        "Pode me ajudar com isso?",
        "Não entendi, pode repetir?"
    ],
    "comidas": [
        "O arroz está quente",
        "A feijoada é uma comida típica",
        "O brigadeiro é muito doce",
        "A pizza está deliciosa",
        "O churrasco é uma tradição"
    ],
    "cores": [
        "Vermelho, azul, amarelo",
        "Verde, roxo, laranja",
        "Rosa, marrom, preto",
        "Branco, cinza, bege",
        "Roxo, lilás, turquesa"
    ],
    "animais": [
        "O leão é o rei da selva",
        "O elefante é um animal grande",
        "A girafa tem pescoço comprido",
        "O macaco pula de galho em galho",
        "O tigre tem listras pretas"
    ],
    "profissoes": [
        "O médico cuida dos doentes",
        "O professor ensina os alunos",
        "O engenheiro constrói prédios",
        "O advogado defende as pessoas",
        "O chef cozinha com amor"
    ]
}

def populate_data(apps, schema_editor):
    Categoria = apps.get_model('fonowiseapp', 'Categoria')
    Frase = apps.get_model('fonowiseapp', 'Frase')

    # Limpa dados existentes para evitar duplicatas
    Frase.objects.all().delete()
    Categoria.objects.all().delete()

    # Populando categorias
    categoria_objs = {}
    for key, nome in CATEGORIAS.items():
        obj = Categoria.objects.create(nome=nome)
        categoria_objs[key] = obj

    # Populando frases
    for key, frases in FRASES.items():
        categoria = categoria_objs[key]
        for frase_texto in frases:
            Frase.objects.create(texto=frase_texto, categoria=categoria)

class Migration(migrations.Migration):

    dependencies = [
        ('fonowiseapp', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_data),
    ]
